// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package secretflow.component;

option java_package = "org.secretflow.proto.component";

// Description of a SecretFlow cluster, including:
// - version info
// - parties: who participate in the computation.
// - secret devices and their configs: security levels.
message SFClusterDesc {
  // SecretFlow version.
  string sf_version = 1;

  // Python version.
  string py_version = 2;

  // Joined entities.
  // e.g. [CompanyA, CompanyB]
  repeated string parties = 3;

  // Description for a secret device.
  // PYUs do not need to claim.
  message DeviceDesc {
    // Name of the device.
    string name = 1;

    // Supported: SPU, HEU, TEEU
    string type = 2;

    // Parties of device.
    repeated string parties = 3;

    // Specific config for the secret device.
    string config = 4;
  }

  // Description of secret devices
  repeated DeviceDesc devices = 4;

  message RayFedConfig {
    // Indicates communication backend of RayFed.
    // Accepted: 'grpc', 'brpc_link'
    // Dafault is 'grpc'
    string cross_silo_comm_backend = 1;
  }

  RayFedConfig ray_fed_config = 5;
}

// A StorageConfig is the root for all data for one party.
// For security reasons, you have to put the a JSON format of config at
// .sf_storage file at each node for each party in production.
message StorageConfig {
  // supported: local_fs
  string type = 1;

  message LocalFSConfig {
    // working directory
    string wd = 1;
  }
  // local_fs
  LocalFSConfig local_fs = 2;
}

// Runtime Config for a SecretFlow cluster.
message SFClusterConfig {
  // Contains addresses for a RayFed cluster.
  // Each party should own an address.
  // Only for production mode.
  message RayFedConfig {
    repeated string parties = 1;

    repeated string addresses = 2;

    repeated string listen_addresses = 3;
  }

  // Contains addresses for a SPU device.
  message SPUConfig {
    string name = 1;

    repeated string parties = 2;

    repeated string addresses = 3;

    repeated string listen_addresses = 4;
  }

  // Public and shared to all parties.
  message PublicConfig {
    RayFedConfig rayfed_config = 1;

    repeated SPUConfig spu_configs = 2;
  }

  // Different for each party.
  // For production mode only.
  message PrivateConfig {
    string self_party = 1;

    string ray_head_addr = 2;

    StorageConfig storage_config = 3;
  }

  SFClusterDesc desc = 1;

  PublicConfig public_config = 2;

  PrivateConfig private_config = 3;
}
